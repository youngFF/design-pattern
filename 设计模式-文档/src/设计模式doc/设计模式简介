设计模式的六大原则：
    1.开闭原则：对扩展开放，对修改关闭。在程序需要扩展的时候，不能去修改原有代码，实现一个热插拔的效果。简言之，
    为了使程序的扩展性好，易于维护和升级。要想达到这样的效果，需要使用接口和抽象类。

    （这是最基本的原则，也是最重要的原则，在自己写框架的时候，一定要把这个因素加入到自己的代码编写过程当中）

    2.里式替换原则：任何接口/抽象类出现的地方，它的子类也可以出现（满足出现条件）

    (这条原则是面向接口编程的依据)


    3.依赖倒转原则：面向接口编程而不是具体类进行编程。

    4.接口隔离原则：使用多个隔离的接口要比使用单一的接口要好。

    (这样的结果会使得具体类有选择的实现某些接口的功能)

    5.迪米特法则（最少知道法则）： 一个实体类应当尽量较少的与其它类进行交互

    (这样做的好处是，某块间的独立性更强)

    6.合成复用原则 ：尽量使用合成/聚合的方式，而不是继承。

